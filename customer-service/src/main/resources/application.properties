server.port=0
spring.application.name=CUSTOMER-SERVICE
spring.cloud.service-registry.auto-registration.fail-fast=true
spring.cloud.discovery.enabled=true
management.endpoints.web.exposure.include=*

#-----------------------
# For docker
#eureka.client.serviceUrl.defaultZone=${EUREKA_SERVER:http://eureka-server:8761/eureka}
# For localhost
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka/
#----------------------

#mongoDB Atlas connection
spring.data.mongodb.uri=*****
#spring.data.mongodb.authentication-database=admin
#spring.data.mongodb.host=localhost
#spring.data.mongodb.username=rootuser
#spring.data.mongodb.password=rootpass
#spring.data.mongodb.database=springboot_mongo
#spring.data.mongodb.port=27017

#----------------------
#Kafka
#spring.kafka.bootstrap-servers=localhost:9092
#spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.StringSerializer
#spring.kafka.topic.topicSignUp.name=account-topic

#---------------------
#security
spring.security.user.name=skjs
spring.security.password=123






#logging file
logging.file.name= customer-service/app.log
logging.file.clean-history-on-start= true





#kafka
#spring.kafka.bootstrap-servers= 127.0.0.1:39092, 127.0.0.1:29092

#spring.kafka.producer.key-serializer= org.apache.kafka.common.serialization.LongSerializer
#spring.kafka.producer.value-serializer= org.springframework.kafka.support.serializer.JsonSerializer

#spring.kafka.consumer.key-serializer= org.apache.kafka.common.serialization.LongSerializer
#spring.kafka.consumer.value-serializer= org.springframework.kafka.support.serializer.JsonSerializer

#spring.kafka.streams.properties.default.key.serde= org.apache.kafka.common.serialization.Serdes$LongSerde
#spring.kafka.streams.properties.default.value.serde= org.springframework.kafka.support.serializer.JsonSerde
#spring.kafka.streams.properties.spring.json.trusted.packages= "*"